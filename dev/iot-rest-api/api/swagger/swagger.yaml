swagger: "2.0"
info:
  version: "0.0.1"
  title: IOT Back-end REST API
  description: https://github.com/heig-vd-iot2018/back-end
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
  
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: [ ]
paths:
  /auth:
    x-swagger-router-controller: Authentication
    post:
      operationId: signIn
      description: Sign a user in using username and password credentials.
      produces:
        - text/plain
        
      security: []
      parameters:
        - in: body
          name: credentials
          description: Credentials object.
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      
      responses:
        "200":
          description: Authentication successfull.
          schema: 
            type: string

  /sensors:
    x-swagger-router-controller: Sensor
    get:
      description: Returns list of all sensors
      operationId: getSensors
      
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Sensor"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
              
  /sensors/{id}:
    x-swagger-router-controller: Sensor
    get:
      description: Get a sensor
      operationId: getSensor
      
      parameters:
        - name: id
          in: path
          description: The id of the sensors to get
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Sensor"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      description: To modifiy a sensors
      
      parameters:
        - name: id
          in: path
          description: The id of the sensors to get
          required: true
          type: integer
      responses:
        200:
          description: OK
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /nodes:
    x-swagger-router-controller: Node
    get:
      description: Returns list of all nodes
      operationId: getNodes
      
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Node"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /nodes/{id}:
    x-swagger-router-controller: Node
    get:
      description: Returns a node
      operationId: getNode
      
      parameters:
        - name: id
          in: path
          description: The id of the node to get
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Node"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /sensors/data:
    x-swagger-router-controller: Sensor
    post:
      description: Allow sensors to post their data
      operationId: setData
      
      parameters:
        - name: id
          in: body
          description: The id of the node to set
          required: true
          schema:
            $ref: "#/definitions/SensorData"
      responses:
        "200":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Credentials:
    required:
      - username
      - password
    
    properties:
      username:
        type: string
        minLength: 3
      password:
        type: string
        format: password
        minLength: 8

  Node:
    required:
      - id
      - createdDate
      - lastUpdated
      - active
      - localisation
      - sensors

    properties:
      id:
        type: integer
      createdDate:
        type: string
      lastUpdated:
        type: string
      active:
        type: boolean
      localisation:
        type: string
      sensors:
        type: array
        items:
          # Only id of sensors
          type: integer

  Sensor:
    required:
      - id
      - createdDate
      - lastUpdated
      - active
      - refreshInterval
      - encoding
      - values
      - documentation

    properties:
      id:
        type: integer
      createdDate:
        type: string
      lastUpdated:
        type: string
      active:
        type: boolean
      refreshInterval:
        type: integer
      encoding:
        type: string
      values:
        type: array
        items:
          type: string
      documentation:
        type: string
        
  SensorData:
    required:
      - id
      - payload
    
    properties:
      id:
        type: integer
      payload:
        type: string
        
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
